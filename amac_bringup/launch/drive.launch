<launch>






#Lidar 
 
  <arg name="scan_dur_ns" default="100000000" doc="nanoseconds to batch lidar packets before publishing a cloud"/>
  <arg name="os1_hostname" default="192.168.1.94" doc="hostname or IP in dotted decimal form of the sensor"/>
  <arg name="os1_udp_dest" default="192.168.1.1" doc="hostname or IP where the sensor will send data packets"/>
  <arg name="os1_lidar_port" default="7502" doc="port to which the sensor should send lidar data"/>
  <arg name="os1_imu_port" default="7503" doc="port to which the sensor should send imu data"/>
  <arg name="replay" default="false" doc="when true, the node will listen on ~/lidar_packets and ~/imu_packets for data instead of attempting to connect to a sensor"/>

  <group ns="/os1_node">
    <param name="scan_dur_ns" value="$(arg scan_dur_ns)"/>
    <param name="os1_hostname" value="$(arg os1_hostname)"/>
    <param name="os1_udp_dest" value="$(arg os1_udp_dest)"/>
    <param name="os1_lidar_port" value="$(arg os1_lidar_port)"/>
    <param name="os1_imu_port" value="$(arg os1_imu_port)"/>
    <param name="replay" value="$(arg replay)"/>
  </group>

  <node pkg="ouster_ros" type="os1_node" name="os1_node" output="screen" required="true"/>



  #arduino




    <node name="serial_node1" pkg="rosserial_python" type="serial_node.py" output="screen">
    <param name="port" value="/dev/ttyACM0" />
    <param name="baud" value="57600" />
    </node>

    <node name="serial_node2" pkg="rosserial_python" type="serial_node.py" output="screen">
    <param name="port" value="/dev/ttyACM1" />
    <param name="baud" value="57600" />
    </node>




  #INS



  <rosparam subst_value="True">

    inertial_sense_node: { port: "/dev/ttyUSB0",
                           baud: 921600,
                           navigation_dt_ms: 10,
                           stream_INS: true,
                           stream_IMU: true,
                           stream_GPS: true,
                           stream_GPS_info: true,
                           stream_baro: true,
                           stream_mag: true,
                           stream_preint_IMU: false,
                           inclination: 1.14878541071,
                           declination: 0.20007290992,
                           dynamic_model: 8,
                           INS_rpy: [1.5708, 0 0],
                           INS_xyz: [1, 0, 0],
                           GPS_ant_xyz: [1, 1, 1],
                           GPS_ref_lla: [40.25, -111.67, 1556.59],
                           serial1_baud_rate: 115200,
                           NMEA_rate: 200,
                           NMEA_configuration: 0x0F,
                           NMEA_ports: 0x02
                         }
    </rosparam>
  <node name="inertial_sense_node" pkg="inertial_sense_ros" type="inertial_sense_node" output="screen"/>




  #cameras




  <group ns="one">
  <node name="usb_cam0" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="320" />
    <param name="image_height" value="240" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>
  <node name="image_view0" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="usb_cam0/image_raw"/>
    <param name="autosize" value="true" />
  </node>
  </group>
  <group ns="two">
  <node name="usb_cam1" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video1" />
    <param name="image_width" value="320" />
    <param name="image_height" value="240" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>
  <node name="image_view1" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="usb_cam1/image_raw"/>
    <param name="autosize" value="true" />
  </node>
  </group>
  <group ns="three">
  <node name="usb_cam2" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video2" />
    <param name="image_width" value="320" />
    <param name="image_height" value="240" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>
  <node name="image_view2" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="usb_cam2/image_raw"/>
    <param name="autosize" value="true" />
  </node>
  </group>



</launch>
